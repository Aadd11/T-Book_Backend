version: '3.8'

networks:
  backend-network:
    driver: bridge

services:
  db:
    command: ["postgres", "-c", "listen_addresses=*"]
    networks:
      - backend-network
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: bookdb
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d bookdb"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    networks:
      - backend-network
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  es:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.2
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - backend-network
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200/_cluster/health?wait_for_status=yellow&timeout=5s"]
      interval: 10s
      timeout: 10s
      retries: 10

  backend:
    networks:
      - backend-network
    build: .
    command: bash -c "sleep 10 && alembic upgrade head && uvicorn app.main:app --host 0.0.0.0 --port 8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      - SYNC_DATABASE_URL=postgresql://user:password@db:5432/bookdb
      - DATABASE_URL=postgresql+asyncpg://user:password@db:5432/bookdb
      - ELASTICSEARCH_URL=http://es:9200
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
      - EXTERNAL_SEARCH_API_BASE_URL=${EXTERNAL_SEARCH_API_BASE_URL}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      es:
        condition: service_healthy

  worker:
    build: .
    networks:
      - backend-network
    command: bash -c "sleep 15 && celery -A app.core.celery_app worker --loglevel=debug -P gevent --without-gossip --without-mingle --without-heartbeat"
    volumes:
      - .:/app
    environment:
      - DATABASE_URL=postgresql+asyncpg://user:password@db:5432/bookdb
      - ELASTICSEARCH_URL=http://es:9200
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
      - EXTERNAL_SEARCH_API_BASE_URL=${EXTERNAL_SEARCH_API_BASE_URL}
    depends_on:
      - db
      - redis
      - es

volumes:
  postgres_data:
  redis_data:
  es_data: